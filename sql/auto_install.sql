-- +--------------------------------------------------------------------+
-- | Copyright CiviCRM LLC. All rights reserved.                        |
-- |                                                                    |
-- | This work is published under the GNU AGPLv3 license with some      |
-- | permitted exceptions and without any warranty. For full license    |
-- | and copyright information, see https://civicrm.org/licensing       |
-- +--------------------------------------------------------------------+
--
-- Generated from schema.tpl
-- DO NOT EDIT.  Generated by CRM_Core_CodeGen
--
-- /*******************************************************
-- *
-- * Clean up the existing tables - this section generated from file:drop.tpl
-- *
-- *******************************************************/

SET FOREIGN_KEY_CHECKS=0;

DROP TABLE IF EXISTS `civicrm_filestorage_sync_log`;
DROP TABLE IF EXISTS `civicrm_filestorage_config`;

SET FOREIGN_KEY_CHECKS=1;

-- /*******************************************************
-- *
-- * Create new tables
-- *
-- *******************************************************/

-- /*******************************************************
-- *
-- * civicrm_filestorage_config
-- *
-- * Storage backend configurations for File Storage Manager extension
-- *
-- *******************************************************/
CREATE TABLE `civicrm_filestorage_config` (
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique FilestorageConfig ID',
  `storage_type` varchar(32) NOT NULL COMMENT 'Type of storage backend: s3, gcs, azure, spaces, local',
  `config_name` varchar(64) NOT NULL COMMENT 'Friendly name for this configuration',
  `config_data` text NOT NULL COMMENT 'JSON configuration: credentials, bucket, region, etc.',
  `is_active` tinyint NOT NULL DEFAULT 1 COMMENT 'Is this configuration active?',
  `is_default` tinyint NOT NULL DEFAULT 0 COMMENT 'Is this the default storage for new files?',
  `file_type_rules` text COMMENT 'JSON rules for which file types use this storage',
  `created_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'When this configuration was created',
  `modified_date` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'When this configuration was last modified',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `unique_config_name`(config_name),
  INDEX `idx_storage_type`(storage_type),
  INDEX `idx_is_active`(is_active),
  INDEX `idx_is_default`(is_default))
ENGINE=InnoDB;

-- /*******************************************************
-- *
-- * civicrm_filestorage_sync_log
-- *
-- * Tracks file storage sync operations for auditing and troubleshooting
-- *
-- *******************************************************/
CREATE TABLE `civicrm_filestorage_sync_log` (
  `id` int unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique FilestorageSyncLog ID',
  `file_id` int unsigned NOT NULL COMMENT 'FK to civicrm_file',
  `operation` varchar(32) NOT NULL COMMENT 'Operation type: upload, download, delete, verify, sync, migrate',
  `source_storage` varchar(32) COMMENT 'Source storage type',
  `target_storage` varchar(32) COMMENT 'Target storage type',
  `status` varchar(32) NOT NULL COMMENT 'Operation status: success, failed, skipped',
  `error_message` text COMMENT 'Error details if status is failed',
  `file_size` bigint unsigned COMMENT 'File size in bytes',
  `duration_ms` int COMMENT 'Operation duration in milliseconds',
  `sync_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'When sync was attempted',
  `created_by` int unsigned COMMENT 'Contact ID who triggered sync',
  PRIMARY KEY (`id`),
  INDEX `idx_file_id`(file_id),
  INDEX `idx_status`(status),
  INDEX `idx_sync_date`(sync_date),
  CONSTRAINT FK_civicrm_filestorage_sync_log_file_id FOREIGN KEY (`file_id`) REFERENCES `civicrm_file`(`id`) ON DELETE CASCADE,
  CONSTRAINT FK_civicrm_filestorage_sync_log_created_by FOREIGN KEY (`created_by`) REFERENCES `civicrm_contact`(`id`) ON DELETE SET NULL)
ENGINE=InnoDB;
